import { type Program } from "@coral-xyz/anchor";
import type { TransactionInstruction } from "@solana/web3.js";
import { Keypair, PublicKey } from "@solana/web3.js";
export declare class Randomness {
    readonly program: Program;
    readonly pubkey: PublicKey;
    constructor(program: Program, pubkey: PublicKey);
    loadData(): Promise<any>;
    static create(program: Program, kp: Keypair, queue: PublicKey): Promise<[Randomness, TransactionInstruction]>;
    commitIx(queue: PublicKey): Promise<TransactionInstruction>;
    revealIx(): Promise<TransactionInstruction>;
    commitAndReveal(callback: TransactionInstruction[], signers: Keypair[], queue: PublicKey, configs?: {
        computeUnitPrice?: number;
        computeUnitLimit?: number;
    }): Promise<void>;
    serializeIxToFile(revealIxs: TransactionInstruction[], fileName?: string): Promise<void>;
    static createAndCommitIxs(program: Program, queue: PublicKey): Promise<[Randomness, Keypair, TransactionInstruction[]]>;
}
//# sourceMappingURL=randomness.d.ts.map