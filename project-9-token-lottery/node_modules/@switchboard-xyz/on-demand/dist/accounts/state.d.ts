import type { BN, Program } from "@coral-xyz/anchor";
import type { TransactionInstruction } from "@solana/web3.js";
import { PublicKey } from "@solana/web3.js";
export declare class State {
    readonly program: Program;
    pubkey: PublicKey;
    static keyFromSeed(program: Program): PublicKey;
    static create(program: Program): Promise<[State, String]>;
    constructor(program: Program);
    setConfigsIx(params: {
        guardianQueue?: PublicKey;
        newAuthority?: PublicKey;
        minQuoteVerifyVotes?: BN;
        stakeProgram?: PublicKey;
        stakePool?: PublicKey;
        permitAdvisory?: number;
        denyAdvisory?: number;
        testOnlyDisableMrEnclaveCheck?: boolean;
        switchMint?: PublicKey;
        epochLength?: BN;
        resetEpochs?: boolean;
        enableStaking?: boolean;
    }): Promise<TransactionInstruction>;
    registerGuardianIx(params: {
        guardian: PublicKey;
    }): Promise<TransactionInstruction>;
    unregisterGuardianIx(params: {
        guardian: PublicKey;
    }): Promise<TransactionInstruction>;
    loadData(): Promise<any>;
    static loadData(program: Program): Promise<any>;
}
//# sourceMappingURL=state.d.ts.map