export type UpsertHexStringParams = {
    discriminator: 0;
    feedId: string;
    queue: string;
    result: string;
    maxVariance: string;
    minResponses: string;
    blockNumber: string;
    timestamp?: string;
    r: string;
    s: string;
    v: number;
};
export type UpdateHexStringParams = {
    discriminator: 1;
    feedId: string;
    result: string;
    blockNumber: string;
    timestamp?: string;
    r: string;
    s: string;
    v: number;
};
export type AttestationHexStringParams = {
    discriminator: 2;
    oracleId: string;
    queueId: string;
    ed25519Key: string;
    secp256k1Key: string;
    blockNumber: string;
    mrEnclave: string;
    r: string;
    s: string;
    v: number;
};
export type RandomnessRevealHexStringParams = {
    discriminator: 4;
    randomnessId: string;
    result: string;
    r: string;
    s: string;
    v: number;
};
export declare function createUpsertHexString({ discriminator, feedId, queue, result, maxVariance, minResponses, blockNumber, r, s, v, timestamp, }: UpsertHexStringParams): string;
export declare function createUpdateHexString({ feedId, discriminator, result, blockNumber, r, s, v, timestamp, }: UpdateHexStringParams): string;
export declare function createAttestationHexString({ discriminator, oracleId, queueId, ed25519Key, secp256k1Key, r, s, v, blockNumber, mrEnclave, }: AttestationHexStringParams): string;
export declare function createRandomnessRevealHexString({ randomnessId, result, r, s, v, }: RandomnessRevealHexStringParams): string;
//# sourceMappingURL=message.d.ts.map